# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2019-09-19 06:32
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('bid', models.AutoField(primary_key=True, serialize=False)),
                ('num', models.CharField(max_length=10, verbose_name='列车编号')),
                ('bus_num', models.CharField(max_length=10, unique=True, verbose_name='车牌号码')),
                ('start_time', models.DateTimeField(verbose_name='起始时间')),
                ('end_time', models.DateTimeField(verbose_name='到达时间')),
                ('start_city', models.CharField(max_length=128, verbose_name='起始城市')),
                ('end_city', models.CharField(max_length=128, verbose_name='到达城市')),
                ('start_station', models.CharField(max_length=128, verbose_name='始发车站')),
                ('end_station', models.CharField(max_length=128, verbose_name='到达车站')),
                ('price', models.IntegerField(verbose_name='价格')),
                ('ticket', models.IntegerField(verbose_name='总票数')),
                ('standby_ticket', models.IntegerField(verbose_name='余票')),
            ],
            options={
                'verbose_name_plural': '车次表',
                'db_table': 'bus',
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('cid', models.AutoField(primary_key=True, serialize=False)),
                ('car_type', models.CharField(max_length=100, verbose_name='车型描述（品牌，名称，座位数）')),
                ('start_time', models.DateTimeField(verbose_name='出发时间')),
                ('start_city', models.CharField(max_length=128, verbose_name='起始城市')),
                ('end_city', models.CharField(max_length=128, verbose_name='到达城市')),
                ('price', models.IntegerField(null=True, verbose_name='价格')),
                ('seats', models.IntegerField(null=True, verbose_name='总座位数')),
                ('left_seats', models.IntegerField(null=True, verbose_name='剩余座位')),
            ],
            options={
                'verbose_name_plural': '拼车表',
                'db_table': 'car',
            },
        ),
        migrations.CreateModel(
            name='List',
            fields=[
                ('lid', models.AutoField(primary_key=True, serialize=False)),
                ('num_list', models.CharField(max_length=128)),
                ('status', models.IntegerField(choices=[(0, '未完成'), (1, '已取消'), (2, '已完成')], default=0, verbose_name='订单状态')),
                ('list_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='下单时间')),
                ('list', models.CharField(max_length=128)),
            ],
            options={
                'verbose_name_plural': '订单表',
                'db_table': 'list',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=128, null=True)),
                ('content', models.CharField(max_length=128, null=True)),
                ('set_time', models.DateTimeField(null=True)),
                ('from_user', models.CharField(max_length=128, null=True)),
            ],
            options={
                'db_table': 'news',
            },
        ),
        migrations.CreateModel(
            name='Userdetail',
            fields=[
                ('eid', models.AutoField(primary_key=True, serialize=False)),
                ('is_vip', models.IntegerField(default=0)),
                ('real_name', models.CharField(max_length=20, null=True, verbose_name='真实姓名')),
                ('id_num', models.CharField(max_length=128, null=True, unique=True, verbose_name='身份证号')),
                ('birthday', models.DateTimeField(null=True, verbose_name='生日')),
                ('address', models.CharField(max_length=200, null=True, verbose_name='地址')),
                ('age', models.IntegerField(null=True, verbose_name='年龄')),
                ('pic', models.CharField(max_length=128, null=True)),
                ('gender', models.IntegerField(choices=[(0, '保密'), (1, '男'), (2, '女')], default=0, null=True, verbose_name='性别')),
                ('car_num', models.CharField(max_length=10, null=True, unique=True, verbose_name='车牌号码')),
            ],
            options={
                'verbose_name_plural': '用户详情',
                'db_table': 'userdetail',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('phone', models.CharField(max_length=64, verbose_name='手机号')),
                ('is_active', models.IntegerField(default=1)),
                ('type', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': '用户表',
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='userdetail',
            name='user_uid',
            field=models.ForeignKey(blank=True, db_column='uid', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='news',
            name='belong_user',
            field=models.ForeignKey(blank=True, db_column='uid', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='list',
            name='list_uid',
            field=models.ForeignKey(blank=True, db_column='uid', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='car',
            name='car_uid',
            field=models.ForeignKey(blank=True, db_column='uid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
    ]
